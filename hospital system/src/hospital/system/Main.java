/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.system;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author Yasser Alaa Eldin
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hospital System");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  static JTextField userText;
  static JPasswordField passwordText;
  static JFrame frame;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

  static String role="";
  
 public static void main(String[] args) {
     
	        frame = new JFrame("Hospital System");
		frame.setSize(300, 150);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		JPanel panel = new JPanel();
		frame.add(panel);
		placeComponents(panel);

		frame.setVisible(true);
	}

	private static void placeComponents(JPanel panel) {

		panel.setLayout(null);

		JLabel userLabel = new JLabel("User");
		userLabel.setBounds(10, 10, 80, 25);
		panel.add(userLabel);

	        userText = new JTextField(20);
		userText.setBounds(100, 10, 160, 25);
		panel.add(userText);

		JLabel passwordLabel = new JLabel("Password");
		passwordLabel.setBounds(10, 40, 80, 25);
		panel.add(passwordLabel);

	        passwordText = new JPasswordField(20);
		passwordText.setBounds(100, 40, 160, 25);
		panel.add(passwordText);

		JButton loginButton = new JButton("login");
		loginButton.setBounds(100, 80, 80, 25);
		panel.add(loginButton);
		loginButton.addActionListener(new ActionListener() { 
  public void actionPerformed(ActionEvent e) { 
    /*Admins admin = new Admins();
    admin.setVisible(true);*/
     if(userText.getText().length()==0)  // Checking for empty field
      JOptionPane.showMessageDialog(null, "Empty fields detected ! Please fill up all fields");
   else if(passwordText.getPassword().length==0)  // Checking for empty field
      JOptionPane.showMessageDialog(null, "Empty fields detected ! Please fill up all fields");
   else{
       String user = userText.getText();   // Collecting the input
       char[] pass = passwordText.getPassword(); // Collecting the input
       String pwd = String.copyValueOf(pass);  // converting from array to string
       if(validate_login(user,pwd))
       {
          JOptionPane.showMessageDialog(null,"Welcome "+user);        
          if(role.equals("Admin"))
          {
          Admins admin = new Admins();
            admin.setVisible(true);
          }
          else if(role.equals("Nurse"))
          {
          Nurses nurse = new Nurses();
            nurse.setVisible(true);
          }
          else if(role.equals("Doctor"))
          {
              NavigationHelper.id = getid(user);
          Doctors doctors = new Doctors();
            doctors.setVisible(true);
          }
       }
        else
          JOptionPane.showMessageDialog(null, "Incorrect Login Credentials");
   }  
  } 
} );
                
	}
        
        private static boolean validate_login(String username,String password) {
   try{           
       Class.forName("com.mysql.jdbc.Driver");  // MySQL database connection
       Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital-system?" + "user=&password=");     
       PreparedStatement pst = conn.prepareStatement("Select * from login where username=? and password=?");
       pst.setString(1, username); 
       pst.setString(2, password);
       
       ResultSet rs = pst.executeQuery();     
       
       if(rs.next())    
       {                  
           role = rs.getString("role");          
           return true;    
       }
         else
           return false;            
   }
   catch(Exception e){
       e.printStackTrace();
       return false;
   }       
}
        
        private static String getid(String username) {
   try{           
       Class.forName("com.mysql.jdbc.Driver");  // MySQL database connection
       Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital-system?" + "user=root&password=6528807");     
       PreparedStatement pst = conn.prepareStatement("Select * from doctors where username=?");
       pst.setString(1, username);
       
       ResultSet rs = pst.executeQuery();     
       
       if(rs.next())    
       {                  
           return String.valueOf(rs.getString("id"));       
       }
         return "";
   }
   catch(Exception e){
       e.printStackTrace();
   }
   return "";
}

}
